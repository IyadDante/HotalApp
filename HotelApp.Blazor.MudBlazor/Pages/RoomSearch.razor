@page "/RoomSearch"

@using HotalAppLibrary.Data;
@using HotalAppLibrary.Models;

@inject IDatabaseData _db

<MudGrid>
    <MudItem xs="12">
        <MudText Align="Align.Center" Typo="Typo.h1"> Room Search </MudText>
        <MudText Align="Align.Center" Typo="Typo.h6"> Select date to view the available rooms </MudText>
        <br />
        <br />
        <br />
        <MudStack xs="12">
            <MudStack Row="true" xs="6">
                <MudDatePicker Label="Start Date" @bind-Date="@startDate" Align="Align.Center" DisableToolbar="true" />
                <MudDatePicker Label="End Date" @bind-Date="@endDate" Align="Align.Center" DisableToolbar="true" />
            </MudStack>
            <MudButton ButtonType="ButtonType.Submit" OnClick="searchOnClick" Variant="Variant.Filled" Color="Color.Primary">Search</MudButton>
        </MudStack>     
    </MudItem>
</MudGrid>

<br />
<MudItem xs="12" Class="@statusVisibility">
    <MudText Typo="Typo.body2" Align="Align.Left">Available Rooms List: </MudText>
</MudItem>
<br />

<MudTable Items="@availableRooms" Hover="true" >
    <HeaderContent>
        <MudTh>Id</MudTh>
        <MudTh>Title</MudTh>
        <MudTh>Description</MudTh>
        <MudTh>Price</MudTh>
        <MudTh></MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="id">@context.Id</MudTd>
        <MudTd DataLabel="title">@context.Title</MudTd>
        <MudTd DataLabel="description">@context.Description</MudTd>
        <MudTd DataLabel="price">@context.Price</MudTd>
        <MudLink Underline="Underline.Always" Href="@($"/RoomBooking?roomTypeId={@context.Id}&startDate={StartDate}&endDate={EndDate}")">Book Now for {@context.Id}</MudLink>
    </RowTemplate>
</MudTable>


@code 
{
    private DateTime? startDate { get; set; } 
    private DateTime? endDate { get; set; }
    private List<RoomTypesModel>? availableRooms { get; set; }
    public string StartDate { get; set; }
    public string EndDate { get; set; }
    public string statusVisibility { get; set; } = "invisible";


    protected override async Task OnInitializedAsync()
    {
        startDate = DateTime.Today;
        endDate = DateTime.Today.AddDays(1); 
    }
    void searchOnClick()
    {
        statusVisibility = "visible";

        availableRooms = _db.GetAvailableRoomTypes(startDate.Value.Date, endDate.Value.Date);
        StartDate = startDate.Value.ToShortDateString();
        EndDate = endDate.Value.ToShortDateString();
    }

}
