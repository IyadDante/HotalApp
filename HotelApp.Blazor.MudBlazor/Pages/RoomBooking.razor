@page "/RoomBooking"

@using HotalAppLibrary.Data;
@using HotalAppLibrary.Models;
@using System.ComponentModel.DataAnnotations;



@inject IDatabaseData _db
@inject IDialogService DialogService
@inject NavigationManager NavManager

<MudGrid  OnValidSubmit="OnValidSubmit">
        <MudItem xs="12" Spacing="4">
            <MudText Align="Align.Center" Typo="Typo.h1"> Room Booking </MudText>
            <MudText Align="Align.Center" Typo="Typo.h6"> Room Title: @roomTypeModel.Title </MudText>
            <MudText Align="Align.Center" Typo="Typo.h6"> Room Description: @roomTypeModel.Description </MudText>
        </MudItem>
        <MudItem xs="6">
        <MudTextField @bind-Value="startDate" Label="Start Date" ReadOnly="true" Margin="Margin.Dense" Variant="Variant.Outlined"/>
        </MudItem>
        <MudItem xs="6">
        <MudTextField @bind-Value="endDate" Label="End Date" ReadOnly="true" Margin="Margin.Dense" Variant="Variant.Outlined"/>
        </MudItem>
</MudGrid>
<br />
<EditForm Model="@newGuest" OnValidSubmit="OnValidSubmit">

    <DataAnnotationsValidator />

    <MudStack xs="12">
        <MudStack Row="true" xs="6">
            <MudTextField T="string" Label="First Name" @bind-Value="newGuest.FirstName" For="@(() => newGuest.FirstName)" Margin="Margin.Dense" Variant="Variant.Outlined"/>
            <MudTextField T="string" Label="Last Name" @bind-Value="newGuest.LastName" For="@(() => newGuest.LastName)" Margin="Margin.Dense" Variant="Variant.Outlined"/>
        </MudStack>
            <MudButton xs="3" ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Margin="Margin.Dense" Class="ml-auto">Confirm Booking</MudButton>
       </MudStack>
        
</EditForm>





@code 
{
    [Parameter]
    [SupplyParameterFromQuery]
    public int roomTypeId { get; set; }
    [Parameter]
    [Required]
    [SupplyParameterFromQuery]
    public DateTime startDate { get; set; }
    [Parameter]
    [Required]
    [SupplyParameterFromQuery]
    public DateTime endDate { get; set; }

    public RoomTypesModel roomTypeModel { get; set; }

    public int NewUserID { get; set; }

    public int NewRoomID { get; set; }

    public int BookingId { get; set; }

    public decimal TotalRoomPrice { get; set; }

    bool success;

    ReqiredInputs newGuest = new ReqiredInputs();

    public class ReqiredInputs
    {
        [Required]
        [StringLength(8, ErrorMessage = "Name length can't be more than 8.")]
        public string FirstName { get; set; }

        [Required]
        [StringLength(8, ErrorMessage = "Name length can't be more than 8.")]
        public string LastName { get; set; }
    }

    protected override void OnInitialized()
    {
        roomTypeModel = _db.GetRoomTypesDetailById(roomTypeId);
    }

    private void OnValidSubmit(EditContext context)
    {
        success = true;
        StateHasChanged();
        searchOnClick();
        NavManager.NavigateTo("/Index");
    }

    public void searchOnClick()
    {
        NewUserID =  _db.RegisterGuset(newGuest.FirstName, newGuest.LastName);
        NewRoomID = _db.GetAvailableRoomsIdByRoomTypeId(startDate, endDate, roomTypeId);
        TotalRoomPrice = _db.GetRoomPrice(roomTypeId, startDate, endDate);
        BookingId = _db.BookGusetToRoom(NewRoomID, NewUserID, startDate, endDate, TotalRoomPrice);
    }

    
}
